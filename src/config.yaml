data_files:
  bus_stops: "./data/input/geojson/stm_bus_stops.geojson"
  bixi_stations: "./data/input/geojson/stations_bixi.geojson"
  evaluation_fonciere: "./data/input/geojson/uniteevaluationfonciere.geojson"
  menage_2018: "./data/input/geojson/od_2018.geojson"
  reseau_cyclable: "./data/input/geojson/reseau_cyclable.geojson"

buffer_layer:
  bixi_stations:
    distance: 200  # Distance du buffer en mètres
    geometry_type: "Points"  # Type de géométrie

filter_files:
  bus_stops:
    column:
    value:
  # bixi_stations:
  #   column: "capacity"
  #   value: 30
  #   operator: ">="

ratio_columns:
  permis_perslogi_ratio:
    numerator: "permis"
    denominator: "perslogi"
  ratio2:
    numerator:
    denominator:

sum_columns:
  - "permis as total_permis"
  - "autologi as total_autologi"

max_columns:
  - "capacity"

min_columns:

mean_columns:
  - "SUPERFICIE_TERRAIN as moy_superficie_terrain"
  - "LONGUEUR as moy_long_piste_cy"

std_columns:

count_columns:
  - "stop_id as count_arret_bus"
  - "feuillet as count_nb_menage"
  - "ID_UEV as count_num_bati"

groupby_columns:
  - "buffer_id"
  - "name"

##TODO fixer le name retirer les _
filter_global:
  - column:
    value:
    operator:
  - column:
    value:
    operator:

activate_visualisation: trues

join_layers:
  points:
    type: "contains"
  polygons:
    type: "intersects"
  multipolygons:
    type: "intersects"
  linestrings:
    type: "intersects"

colors:
  bus_stops: "[0, 200, 0, 160]"
  bixi_stations: "[200, 30, 0, 160]"
  evaluation_fonciere: "[0, 30, 200, 160]"
  menage_2018: "[255, 255, 0, 160]"
  reseau_cyclable: "[255, 165, 0, 160]"